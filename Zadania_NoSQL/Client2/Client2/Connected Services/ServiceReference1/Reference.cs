//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client2.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Movie", Namespace="http://schemas.datacontract.org/2004/07/Models")]
    [System.SerializableAttribute()]
    public partial class Movie : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReleaseYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReleaseYear {
            get {
                return this.ReleaseYearField;
            }
            set {
                if ((this.ReleaseYearField.Equals(value) != true)) {
                    this.ReleaseYearField = value;
                    this.RaisePropertyChanged("ReleaseYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IMoviesWCFService")]
    public interface IMoviesWCFService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoviesWCFService/GetAllMovies", ReplyAction="http://tempuri.org/IMoviesWCFService/GetAllMoviesResponse")]
        Client2.ServiceReference1.Movie[] GetAllMovies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoviesWCFService/GetAllMovies", ReplyAction="http://tempuri.org/IMoviesWCFService/GetAllMoviesResponse")]
        System.Threading.Tasks.Task<Client2.ServiceReference1.Movie[]> GetAllMoviesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoviesWCFService/AddMovie", ReplyAction="http://tempuri.org/IMoviesWCFService/AddMovieResponse")]
        int AddMovie(Client2.ServiceReference1.Movie movie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoviesWCFService/AddMovie", ReplyAction="http://tempuri.org/IMoviesWCFService/AddMovieResponse")]
        System.Threading.Tasks.Task<int> AddMovieAsync(Client2.ServiceReference1.Movie movie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoviesWCFService/GetMovie", ReplyAction="http://tempuri.org/IMoviesWCFService/GetMovieResponse")]
        Client2.ServiceReference1.Movie GetMovie(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoviesWCFService/GetMovie", ReplyAction="http://tempuri.org/IMoviesWCFService/GetMovieResponse")]
        System.Threading.Tasks.Task<Client2.ServiceReference1.Movie> GetMovieAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoviesWCFService/UpdateMovie", ReplyAction="http://tempuri.org/IMoviesWCFService/UpdateMovieResponse")]
        Client2.ServiceReference1.Movie UpdateMovie(Client2.ServiceReference1.Movie movie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoviesWCFService/UpdateMovie", ReplyAction="http://tempuri.org/IMoviesWCFService/UpdateMovieResponse")]
        System.Threading.Tasks.Task<Client2.ServiceReference1.Movie> UpdateMovieAsync(Client2.ServiceReference1.Movie movie);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMoviesWCFServiceChannel : Client2.ServiceReference1.IMoviesWCFService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MoviesWCFServiceClient : System.ServiceModel.ClientBase<Client2.ServiceReference1.IMoviesWCFService>, Client2.ServiceReference1.IMoviesWCFService {
        
        public MoviesWCFServiceClient() {
        }
        
        public MoviesWCFServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MoviesWCFServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MoviesWCFServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MoviesWCFServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Client2.ServiceReference1.Movie[] GetAllMovies() {
            return base.Channel.GetAllMovies();
        }
        
        public System.Threading.Tasks.Task<Client2.ServiceReference1.Movie[]> GetAllMoviesAsync() {
            return base.Channel.GetAllMoviesAsync();
        }
        
        public int AddMovie(Client2.ServiceReference1.Movie movie) {
            return base.Channel.AddMovie(movie);
        }
        
        public System.Threading.Tasks.Task<int> AddMovieAsync(Client2.ServiceReference1.Movie movie) {
            return base.Channel.AddMovieAsync(movie);
        }
        
        public Client2.ServiceReference1.Movie GetMovie(int id) {
            return base.Channel.GetMovie(id);
        }
        
        public System.Threading.Tasks.Task<Client2.ServiceReference1.Movie> GetMovieAsync(int id) {
            return base.Channel.GetMovieAsync(id);
        }
        
        public Client2.ServiceReference1.Movie UpdateMovie(Client2.ServiceReference1.Movie movie) {
            return base.Channel.UpdateMovie(movie);
        }
        
        public System.Threading.Tasks.Task<Client2.ServiceReference1.Movie> UpdateMovieAsync(Client2.ServiceReference1.Movie movie) {
            return base.Channel.UpdateMovieAsync(movie);
        }
    }
}
